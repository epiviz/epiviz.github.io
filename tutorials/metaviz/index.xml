<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metaviz-rsses on Epiviz</title>
    <link>https://epiviz.github.io/tutorials/metaviz/index.xml</link>
    <description>Recent content in Metaviz-rsses on Epiviz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Nov 2016 14:12:05 -0500</lastBuildDate>
    <atom:link href="https://epiviz.github.io/tutorials/metaviz/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Metaviz Tutorials</title>
      <link>https://epiviz.github.io/tutorials/metaviz/</link>
      <pubDate>Tue, 22 Nov 2016 14:12:05 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/</guid>
      <description>

&lt;h3 id=&#34;tutorials&#34;&gt;Tutorials&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;overview&#34;&gt;post 1: Metaviz Quick Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;metagenomeSeq&#34;&gt;post 2: Differential Analysis with MetagenomeSeq and Metaviz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;video_tutorials&#34;&gt;post 3: Visual Analysis of MSD16S Dataset&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;spline&#34;&gt;post 4: Longitudinal Data Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;usingDocker&#34;&gt;post 5: Metaviz Docker Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;hostingData&#34;&gt;post 6: Hosting Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Metaviz Quick Overview</title>
      <link>https://epiviz.github.io/tutorials/metaviz/overview/</link>
      <pubDate>Tue, 24 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/overview/</guid>
      <description>

&lt;p&gt;Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. Metaviz supports a flexible plugin framework so users can add new d3 visualizations. This post introduces the most compelling user interface features of Metaviz.  An in-depth visual analysis using Metaviz can be found &lt;a href=&#34;../video_tutorials/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;novel-navigation-utility-for-exploring-taxonomic-hierarchies&#34;&gt;Novel Navigation Utility for Exploring Taxonomic Hierarchies&lt;/h2&gt;

&lt;p&gt;Effectively navigating the hierarchical space of features for metagenomic data is challenging. Metaviz is designed specifically to address this. The Metaviz workspace displayed below includes a &amp;lsquo;FacetZoom&amp;rsquo; object that shows a limited section of the taxonomic hierarchy at one time.  A &amp;lsquo;FacetZoom&amp;rsquo; object can be used to explore the observed features in the dataset and aggregate counts to specific nodes or levels in the taxonomic hierarchy.  We will introduce &amp;lsquo;FacetZoom&amp;rsquo; functionality as needed throughout this workflow.  A &amp;lsquo;FacetZoom&amp;rsquo; object controls the views of data visualizations we will add in the next sections.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/FacetZoomInitial.png&#34; alt=&#34;Facet Zoom Initial View&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;heatmap-linked-to-taxonomic-hierarchy&#34;&gt;Heatmap Linked to Taxonomic Hierarchy&lt;/h2&gt;

&lt;p&gt;The next feature is linked charts that update on exploration with the ‘FacetZoom’ navigation object.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapFacetZoomColorsCompleted.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;pca-plots&#34;&gt;PCA Plots&lt;/h2&gt;

&lt;p&gt;Metaviz also provides PCA ordination plots with the samples colored by a selected attribute.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/PCASettingsSelected.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;stacked-bar-plots&#34;&gt;Stacked Bar Plots&lt;/h2&gt;

&lt;p&gt;With Metaviz, a user can create Stacked Bar Plots and group by or order by a given attribute. A user can also make separate charts for case and control samples for comparison.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/StackedPlotCaseGroupBy.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;text-search&#34;&gt;Text Search&lt;/h2&gt;

&lt;p&gt;Complementary to the ‘FacetZoom’ object, Metaviz provides text-based search which can be used by typing in the text box in the menu bar &amp;lsquo;Text Based Search&amp;rsquo; to search for specific taxonomic features.&lt;/p&gt;

&lt;p&gt;Choose &amp;lsquo;Firmucutes&amp;rsquo;, &amp;lsquo;phylum&amp;rsquo; from the drop down menu. This will move the navigation bar to encompass that item.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/TextSearchTypingFirmicutes.png&#34; alt=&#34;&#34; /&gt;
Beyond text-based search, the navigation bar can be moved, expanded, and reduced by using either the controls in the left-hand corner of the FacetZoom object or by dragging the red ends of the navigation bar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationWidgetNavBarExpandAll.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;aggregation-at-any-set-of-nodes-in-hierarchy&#34;&gt;Aggregation at any set of nodes in hierarchy&lt;/h2&gt;

&lt;p&gt;Now we will navigate the FacetZoom object to see selections update the heatmap and stacked line plots.&lt;/p&gt;

&lt;p&gt;You can interact with the FacetZoom object by clicking on any node.  Clicking on a node at a lower level than the root of the hierarchy will render a new subtree.  Each node can is in one of three states: (1) expanded, which means that the children of the node are shown in visualizations, (2) aggregated, which means that the counts for all children nodes are summed to that node, or (3) removed, which means that the node and all of its children are removed from visualizations.&lt;/p&gt;

&lt;p&gt;To show the states, we click through on the first node of the second row &amp;lsquo;Proteobacteria&amp;rsquo; and then we also click directly on the node to show a new subtree and explore the feature hierarchy. To set aggregation for an entire level, adjust the row control to set the aggregation to another level.  Click on the fourth item, with an &amp;lsquo;F&amp;rsquo; standing for &amp;lsquo;Family&amp;rsquo; and now all counts are summed to the Family level nodes across the samples in the charts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationWidgetTraverseHierarchySetFamily.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we change the aggregation level back to Order and navigate to have &amp;lsquo;Bacteria&amp;rsquo; as the root of the FacetZoom.  We then set some nodes to &amp;lsquo;expanded&amp;rsquo;, &amp;lsquo;removed&amp;rsquo;, and &amp;lsquo;aggregated&amp;rsquo;. We made the following selections based on the appearance of the heatmap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationBarRemovingAggregatingNodes.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, we see the highlight of the path in the hierarchy and across the heatmaps and stacked plots.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationBarHighlightingPath.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In upcoming posts we will include a more detailed example of the usage of Metaviz, including how to integrate with R/Bioconductor for statistical analysis of metagenomic datasets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Differential Analysis with MetagenomeSeq and Metaviz</title>
      <link>https://epiviz.github.io/tutorials/metaviz/metagenomeSeq/</link>
      <pubDate>Tue, 17 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/metagenomeSeq/</guid>
      <description>

&lt;p&gt;Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots.
The metavizr package implements two-way communication between the R/Bioconductor computational genomics environment and Metaviz. Objects in an R/Bioconductor session can be visualized and explored using the Metaviz navigation tool and plots. In this post we show how to use metavizr and the metagenomeSeq Bioconductor package to perform a statistical and visual analysis of differential abundance of metagenomic data.&lt;/p&gt;

&lt;p&gt;First, the following libraries will need to be downloaded and loaded:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;library(metagenomeSeq)
library(msd16s)
library(metavizr)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;generating-metagenomeseq-objects-and-computing-differential-abundance&#34;&gt;Generating metagenomeSeq objects and computing differential abundance&lt;/h2&gt;

&lt;p&gt;In an R session we will use &lt;code&gt;metagenomeSeq&lt;/code&gt; to compute differential abundance.  We focus on the &lt;code&gt;msd16s&lt;/code&gt; dataset and its 301 samples from Bangladesh.&lt;br /&gt;
In &lt;code&gt;metagenomeSeq&lt;/code&gt;, we first subset the data to only Bangladesh samples, aggregate the count data to the species level, and normalize the count data.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;aggregated_feature_order &amp;lt;- colnames(fData(msd16s))[3:9]

msd16s_species &amp;lt;- msd16s
fData(msd16s) &amp;lt;- fData(msd16s)[feature_order]
fData(msd16s_species) &amp;lt;- fData(msd16s_species)[aggregated_feature_order]
  
bangladesh &amp;lt;- msd16s[, which(pData(msd16s)$Country == &amp;quot;Bangladesh&amp;quot;)]
bangladesh_species &amp;lt;- msd16s_species[, which(pData(msd16s_species)$Country == &amp;quot;Bangladesh&amp;quot;)]

aggregated_species &amp;lt;-  cumNorm(aggregateByTaxonomy(bangladesh_species, lvl=&amp;quot;species&amp;quot;), p = 0.75)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We then aggregate another copy of the Bangladesh subset to aggregate to the &amp;ldquo;class&amp;rdquo; level, normalize count data, and compute differential abundance at the &amp;ldquo;class&amp;rdquo; level between dysentery cases and controls.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=False&#34;&gt;aggregation_level &amp;lt;- &amp;quot;class&amp;quot;
aggregated_bangladesh &amp;lt;- aggregateByTaxonomy(bangladesh, lvl=aggregation_level)

normed_bangladesh &amp;lt;-  cumNorm(aggregated_bangladesh, p = 0.75)
bangladesh_sample_data &amp;lt;-  pData(normed_bangladesh)
mod &amp;lt;-  model.matrix(~1+Dysentery, data = bangladesh_sample_data)
results_bangladesh &amp;lt;-  fitFeatureModel(normed_bangladesh, mod) # Check: ?results_bangladesh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can then extract a list of bacterial classes that have a log fold-change greater than 2 and an FDR adjusted p-value less than .1 between dysentery case and control samples from Bangladesh. Once we have this list of differentially abundant classes, we propagate them to an MRexperiment at &amp;ldquo;species&amp;rdquo; level to visualize and explore these results.  The differential abundance cutoff can be set to a different threshold and the aggregation level can also be changed to examine the dataset.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;logFC_bangladesh &amp;lt;- MRcoefs(results_bangladesh, number = nrow(normed_bangladesh))

feature_names &amp;lt;- rownames(logFC_bangladesh[which(logFC_bangladesh[which(abs(logFC_bangladesh$logFC) &amp;gt; 1),]$adjPvalues &amp;lt; .1),]) 
fSelection &amp;lt;- generateSelection(feature_names = feature_names , aggregation_level = aggregation_level, selection_type =2)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;creating-metavizr-object&#34;&gt;Creating metavizR object&lt;/h2&gt;

&lt;p&gt;The next step will be to launch a Metaviz instance from the R session, add a &amp;lsquo;FacetZoom&amp;rsquo; object, modify the node selections to show those nodes that are differentially abundant, and add a heatmap showing only species within differentially abundant classes.
Load the &amp;lsquo;metavizr&amp;rsquo; package and create a Metaviz instance by calling&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;app &amp;lt;- startMetaviz()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will open a new Metaviz session on the default browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/AppInitial.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then, to add a FacetZoom object of the msd16s hierarchy the following call is made to create a Metaviz control object then add a plot.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;control &amp;lt;- metavizr::metavizControl(featureSelection = fSelection)
icicle_plot &amp;lt;- app$plot(aggregated_species, datasource_name=&amp;quot;msd16s&amp;quot;, control=control, feature_order = aggregated_feature_order)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &amp;lsquo;plot&amp;rsquo; function adds the object to the Metaviz session.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/IciclePlotPushed.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;adding-heatmap&#34;&gt;Adding heatmap&lt;/h2&gt;

&lt;p&gt;This step is simple using metavizr, all that needs to be done is call the &amp;lsquo;revisualize&amp;rsquo; method to add another visualization of the same data.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;heatmap &amp;lt;- app$chart_mgr$revisualize(chart_type = &amp;quot;HeatmapPlot&amp;quot;, chart = icicle_plot)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now a heatmap is added to the Metaviz workspace.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapAdded.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;modifying-settings-and-exploring-with-the-facetzoom-object&#34;&gt;Modifying Settings and Exploring with the FacetZoom object&lt;/h2&gt;

&lt;p&gt;Now we modify chart settings to customize the visualization for our purposes. We group-by Dysentery and modify the color settings. To accomplish this we click on the &amp;lsquo;Custom settings&amp;rsquo; icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapSettingsHover.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This launches a pop-up dialog window with all available chart settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapSettingsPopup.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The first setting to change is the &amp;lsquo;Row labels&amp;rsquo; which will be set to &amp;lsquo;Dysentery&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapSettingsDysentery.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Next, move the &amp;lsquo;Row labels as colors&amp;rsquo; radio control to &amp;lsquo;On&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapSettingsColorByOn.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now the heatmap rows will colored by the &amp;lsquo;Dysentery&amp;rsquo; status.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/HeatmapSettingsComplete.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;As with a FacetZoom control added from the UI, a user can modify node states in order to examine the statistical test result.  We modify the navigation widget by changing the &amp;lsquo;Actinobacteria&amp;rsquo; status from removed to aggregated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationWidgetActino.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can then hover on the new column of the heatmap to highlight the path through the hierarchy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationWidgetActinoHover.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A user can also traverse the hierarchy and change the aggregation setting for all nodes at a given level. To show this utility, we navigate to a lower level of the hierarchy by clicking on the &amp;lsquo;Proteobacteria&amp;rsquo; node and set the aggregation level to &amp;lsquo;Family&amp;rsquo; by clicking on the row control node.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationWidgetDescendProteoBacteriaSetGenusAsAgg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then we can hover on a column that appears to show a difference between case and control samples.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/NavigationWidgetHeatmapHoverShigella.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We also can modify chart settings directly through metavizR.  The code block below shows how to list the chart settings, update the &amp;lsquo;Row Labels&amp;rsquo; and &amp;lsquo;Color-By&amp;rsquo; settings, and propogate those changes to the Metaviz interactive visualization.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;# List available chart settings 
app$chart_mgr$list_chart_type_settings(&amp;quot;HeatmapPlot&amp;quot;)

# Choose new settings
settings &amp;lt;- list(rowLabel = &#39;Dysentery&#39;, showColorsForRowLabels = TRUE)

# Apply settings to existing chart
app$chart_mgr$set_chart_settings(heatmap, settings=settings)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Visual Analysis of MSD16S Dataset</title>
      <link>https://epiviz.github.io/tutorials/metaviz/video_tutorials/</link>
      <pubDate>Fri, 17 Feb 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/video_tutorials/</guid>
      <description>

&lt;p&gt;Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. Metaviz supports a flexible plugin framework so users can add new d3 visualizations.
This post shows how to use all the UI features of Metaviz to examine the Moderate to Severe childhood diaherrial disease (msd16s) dataset.
A post providing an overview of Metaviz can be found &lt;a href=&#34;overview.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The dataset we use here consists of case and control samples from children under the age of 6. A total of 992 samples are present that are spread across 4 countries. We will explore one country in detail and use heatmaps and stacked line plots to examine the differences in observed abundance of microbiome features at all levels a taxonomic hierarchy.&lt;/p&gt;

&lt;p&gt;We provide a video showing the workflow in each section and also provide a step by step walkthrough with screenshots after the video.&lt;/p&gt;

&lt;h2 id=&#34;create-a-navigation-widget-and-visualizing-count-values&#34;&gt;Create a Navigation widget and visualizing count values&lt;/h2&gt;

&lt;p&gt;The following video describes the workflow to add a navigation control to explore the taxonomic feature hierarchy and also add a heatmap to visualize the abundance matrix.&lt;/p&gt;

&lt;video class=&#34;mejs-player&#34; height=750 width=1200 controls&gt;
    &lt;source src=&#34;https://epiviz.github.io/tutorials/videos/Video1.mp4&#34; /&gt;
&lt;/video&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt;
&lt;strong&gt;Click Here for a step by step walkthrough of this section&lt;/strong&gt;
&lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;The landing page of &lt;a href=&#34;http://metaviz.cbcb.umd.edu&#34;&gt;http://metaviz.cbcb.umd.edu&lt;/a&gt; will show a blank workspace and a tool bar at the top. To explore the feature hierarchy of a dataset, We click on the &amp;lsquo;Add Visualizations&amp;rsquo; button and
choose the &amp;lsquo;Add new Navigation Control&amp;rsquo; from the drop-down menu. Then, a pop-up measurement browser displays all datasets available in the UMD Metaviz database.&lt;/p&gt;

&lt;p&gt;For this tutorial, choose the &amp;lsquo;msd16s&amp;rsquo; datasource and then click &amp;lsquo;Finish&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;What is displayed in the Metaviz workspace is called a &amp;lsquo;FacetZoom&amp;rsquo; control that shows a limited section of the taxonomic hierarchy at one time.  A &amp;lsquo;FacetZoom&amp;rsquo; control can be used to explore the observed features in the dataset and aggregate counts to specific nodes or levels in the hierarchy.  We will introduce &amp;lsquo;FacetZoom&amp;rsquo; functionality as needed throughout this workflow.  A &amp;lsquo;FacetZoom&amp;rsquo; object controls the views of data visualizations that we will add in the next sections.&lt;/p&gt;

&lt;p&gt;The next step will be to add a heatmap that visualizes the abundance matrix and is linked to the &amp;lsquo;FacetZoom&amp;rsquo; navigation widget. For this dataset, we chose to focus on the samples from Bangladesh. In order to add a heatmap, we click &amp;lsquo;Add Visualizations&amp;rsquo; then select &amp;lsquo;Add new heatmap&amp;rsquo;.  Once the measurement browser pop-up appears, select the &amp;lsquo;msd16s&amp;rsquo; datasource and click &amp;lsquo;next&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;To show more annotations in the measurement browser, click on the &amp;lsquo;Selected Columns&amp;rsquo; tab. The &amp;lsquo;Selected Columns&amp;rsquo; tab lists all the data annotation fields available for the samples and will be different across datasets. In order to select an equal number of case and control samples from one country,click on &amp;lsquo;Country&amp;rsquo; and &amp;lsquo;Dysentery&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;To show more than &amp;lsquo;10&amp;rsquo; samples, change the &amp;lsquo;Show Entries&amp;rsquo; configuration to &amp;lsquo;25&amp;rsquo;. Clicking on a column header will sort the samples based on that attribute. First sort samples by &amp;lsquo;Dysentery&amp;rsquo; and then by &amp;lsquo;Country&amp;rsquo;. Now highlight 25 &amp;lsquo;Control&amp;rsquo; samples from Bangladesh and follow this by selecting 25 &amp;lsquo;Case&amp;rsquo; samples followed by clicking &amp;lsquo;Finish&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;We now see a blank heatmap added to the Metaviz workspace above the &amp;lsquo;FacetZoom&amp;rsquo; control. We also can notice a dark grey bar at the top of the Navigation Widget. This sets the range of features in the hierarchy that are plotted in the heatmap.&lt;br /&gt;
The samples we selected appear to have no observed counts for those features and we therefore need to modify the selection of features to visualize.&lt;/p&gt;

&lt;p&gt;On the &amp;lsquo;FacetZoom&amp;rsquo; navigation widget, expand the navigation bar to include on features by clicking on the red end of the navigation bar and dragging to the specified length. The buttons with arrows in the upper left hand corner of the Navigation Widget control the navigation bar and can be used to move left, right, and expand to cover all features.&lt;/p&gt;

&lt;p&gt;Now that we can see entries in the heatmap, we can change the settings by clicking the settings (fourth) icon in the upper right-hand menu of the heatmap object. Every component in Metaviz has a settings menu to modify many of the charts attributes. To change row labels from the currently displayed sample id&amp;rsquo;s , change the row label setting to &amp;lsquo;Dysentery&amp;rsquo;. Next Toggle the &amp;lsquo;Row labels as colors&amp;rsquo; to &amp;lsquo;ON&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h2 id=&#34;adding-a-pca-plot&#34;&gt;Adding a PCA Plot&lt;/h2&gt;

&lt;p&gt;This tutorial continues from the previous video and adds a PCA Plot to examine variance for the same set of samples to the existing workspace&lt;/p&gt;

&lt;video class=&#34;mejs-player&#34; height=750 width=1200 controls&gt;
    &lt;source src=&#34;https://epiviz.github.io/tutorials/videos/Video2.mp4&#34; /&gt;
&lt;/video&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt;
&lt;strong&gt;Click Here for a step by step walkthrough of this section&lt;/strong&gt;
&lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;The next step will be to generate a PCA ordination plot over the samples selected. Select &amp;lsquo;Add new PCA scatter&amp;rsquo; from the &amp;lsquo;Add Visualizations&amp;rsquo; button. Select the Heatmap samples, this is designated by msd16s_plot-heatmap-EU1va which is a random id assigned to every chart on the Metaviz workspace, then click &amp;lsquo;next&amp;rsquo;. Chose &amp;lsquo;Select All&amp;rsquo; to select all samples and &amp;lsquo;Finish&amp;rsquo; to add a PCA plot to the workspace.&lt;/p&gt;

&lt;p&gt;To differentiate between samples, we can adjust the &amp;lsquo;Color By&amp;rsquo; setting and set it to &amp;lsquo;Dysentery&amp;rsquo; Status.&lt;/p&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h2 id=&#34;creating-stacked-line-plots-for-case-and-control&#34;&gt;Creating Stacked Line Plots for Case and Control&lt;/h2&gt;

&lt;p&gt;This section describes the workflow to visualize feature proportions across case and control samples using Stacked Bar plots.&lt;/p&gt;

&lt;video class=&#34;mejs-player&#34; height=750 width=1200 controls&gt;
    &lt;source src=&#34;https://epiviz.github.io/tutorials/videos/Video3.mp4&#34; /&gt;
&lt;/video&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt;
&lt;strong&gt;Click Here for a step by step walkthrough of this section&lt;/strong&gt;
&lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;The next step will be to add stacked bar plots for case and control samples. In order to do this, again click on &amp;lsquo;Add Visualizations&amp;rsquo; then select &amp;lsquo;Add new stacked plot&amp;rsquo;. In the pop-up measurement browser, there will be an entry &amp;lsquo;msd16s_plot-heatmap-yxy3D&amp;rsquo; which is the measurements that were selected to build the heatmap and PCA scatter plot. Click on this datasource then &amp;lsquo;Next&amp;rsquo;. Click on the &amp;lsquo;Selected Columns&amp;rsquo; tab to show &amp;lsquo;Dysentery&amp;rsquo; status, select &amp;lsquo;25&amp;rsquo; from the &amp;lsquo;Show Entries&amp;rsquo; drop-down configuration. To add a stacked plot for the case samples,  click on the &amp;lsquo;Dysentery&amp;rsquo; column heading to arrange by status. Highlight the case samples and click &amp;lsquo;Finish&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Now perform the same process and select control samples.&lt;/p&gt;

&lt;p&gt;Also, we can show how to write custom JavaScript within Metaviz for display, in this instance we want to order the stacked plot entries by AgeFactor. In the case samples stacked bar plot, click on the third icon &amp;lsquo;Code&amp;rsquo;. With the pop-up window, click the &amp;lsquo;Order By&amp;rsquo; tab.&lt;/p&gt;

&lt;p&gt;For any modifications to take effect, we will need to set the radio button in the upper left corner to &amp;lsquo;On&amp;rsquo;. Under the &amp;lsquo;Mark&amp;rsquo; method, we change the function to take the current measurement &amp;rsquo;m&amp;rsquo;, retrieve its metadata by calling .annotation(), and choosing the &amp;lsquo;AgeFactor&amp;rsquo; field to order by.&lt;/p&gt;

&lt;p&gt;Now we can modifying the settings for the stacked bar plot to show sample &amp;lsquo;AgeFactor&amp;rsquo; instead of &amp;lsquo;name&amp;rsquo;. We can apply this process to both case and control stacked bar plots and order them by &amp;lsquo;AgeFactor&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Now we can &amp;lsquo;Group-by&amp;rsquo; &amp;lsquo;AgeFactor&amp;rsquo; in the control samples by choosing the settings tab and setting &amp;lsquo;Group-by&amp;rsquo; to &amp;lsquo;On&amp;rsquo; and choosing &amp;lsquo;AgeFactor&amp;rsquo; as the field. We can also perform that for the case samples.&lt;/p&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;

&lt;h2 id=&#34;exploring-workspace-and-analysis-using-the-facetzoom-navigation-widget&#34;&gt;Exploring workspace and analysis using the FacetZoom navigation widget&lt;/h2&gt;

&lt;p&gt;This video describes how to modify the state of the FacetZoom navigation widget and propagating feature node states to other visualizations in the workspace.
We also provide a text based search to quickly navigate to the feature of interest.&lt;/p&gt;

&lt;video class=&#34;mejs-player&#34; height=750 width=1200 controls&gt;
    &lt;source src=&#34;https://epiviz.github.io/tutorials/videos/Video4.mp4&#34; /&gt;
&lt;/video&gt;

&lt;p&gt;&lt;details&gt;
&lt;summary&gt;
&lt;strong&gt;Click Here for a step by step walkthrough of this section&lt;/strong&gt;
&lt;/summary&gt;&lt;/p&gt;

&lt;p&gt;Now that we have added a FacetZoom navigation widget and different charts that show different views of the abundace matrix, we can now focus on exploring the dataset and how changing state of the features effect the analysis. We can focus on a specific features by adjusting the navigation bar in the FacetZoom object. We provide text-based search to quickly navigate the FacetZoom widget to a feature. This can be done by typing in the text box in the menu bar &amp;lsquo;Text Based Search&amp;rsquo;. Lets update the navigation bar in the FacetZoom widget to &amp;lsquo;Firmicutes&amp;rsquo; by typing &amp;lsquo;Firmucutes&amp;rsquo; in the text box.&lt;/p&gt;

&lt;p&gt;Choose &amp;lsquo;Firmucutes&amp;rsquo;, &amp;lsquo;phylum&amp;rsquo; from the drop down menu. This will move the navigation bar to encompass that item.&lt;/p&gt;

&lt;p&gt;Beyond text-based search, the navigation bar can be moved, expanded, and reduced by using either the controls in the left-hand corner of the FacetZoom object or by dragging the red ends of the navigation bar.&lt;/p&gt;

&lt;p&gt;All charts in the Metavize workspace are linked to the features on the FacetZoom control.  By hovering over any chart, we see that feature highlighted in all other charts as well as the path in the FacetZoom hierarchy.&lt;/p&gt;

&lt;p&gt;Now we will modify the state of the feature nodes in the FacetZoom object to see selections propagate to the heatmap and stacked line plots. You can interact with the FacetZoom object by clicking on any node. Clicking on a node at a lower level than the root of the hierarchy will render a new subtree with the clicked node as the root. This helps navigate the hierarchy.  Each node can be in one of three states:
(1) expanded, which means that the children of the node are shown in visualizations,
(2) aggregated, which means that the counts for all children nodes are summed to that node, or
(3) removed, which means that the node and all of its children counts are removed from visualizations.&lt;/p&gt;

&lt;p&gt;To show the states, we click through on the first node of the second row &amp;lsquo;Proteobacteria&amp;rsquo; and then we also click directly on the node to show a new subtree and explore the feature hierarchy. To set aggregation for an entire level, adjust the row control to set the aggregation to another level.  Click on the fourth item, with an &amp;lsquo;F&amp;rsquo; standing for &amp;lsquo;Family&amp;rsquo; and now all counts are summed to the Family level nodes across the samples in the charts.&lt;/p&gt;

&lt;p&gt;Next, we change the aggregation level back to Order and navigate to have &amp;lsquo;Bacteria&amp;rsquo; as the root of the FacetZoom.  We then set some nodes to &amp;lsquo;expanded&amp;rsquo;, &amp;lsquo;removed&amp;rsquo;, and &amp;lsquo;aggregated&amp;rsquo;. We made the following selections based on the appearance of the heatmap.&lt;/p&gt;

&lt;p&gt;&lt;/details&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Longitudinal Data Analysis</title>
      <link>https://epiviz.github.io/tutorials/metaviz/spline/</link>
      <pubDate>Fri, 13 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/spline/</guid>
      <description>

&lt;p&gt;Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots.
The metavizr package implements two-way communication between the R/Bioconductor computational genomics environment and Metaviz. Objects in an R/Bioconductor session can be visualized and explored using the Metaviz navigation tool and plots.
In this post we show how to use metavizr and the metagenomeSeq Bioconductor package to
analyze data from a longitudinal study.&lt;/p&gt;

&lt;h2 id=&#34;generating-metagenomeseq-objects-and-performing-ss-anova-testing&#34;&gt;Generating metagenomeSeq objects and performing SS-ANOVA testing&lt;/h2&gt;

&lt;p&gt;We use a dataset from &amp;ldquo;Individual-specific changes in the human gut microbiota after challenge with enterotoxigenic Escherichia coli and subsequent ciprofloxacin treatment&amp;rdquo; which includes data from 12 human samples that were challenged with E. coli then provided subsequent antibiotic treatment.&lt;br /&gt;
Samples were taken for 1 day pre-infection and 10 days post-infection. We will analyze this time series data with a smoothing-spline and plot it in a Metaviz workspace with a line plot over all features.&lt;/p&gt;

&lt;p&gt;First, import the etec16s dataset, select sample data from the first 9 days. Then use metavizr to launch an instance of the Metaviz app in a local web-browser.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;library(etec16s)
library(metagenomeSeq)
library(metavizr)
data(etec16s)
etec16s &amp;lt;- etec16s[,-which(pData(etec16s)$Day&amp;gt;9)]

app &amp;lt;- startMetaviz(&amp;quot;http://metaviz.cbcb.umd.edu&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This provides a new workspace.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SplineAppLaunch.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Next, use metagenomeSeq to fit a smoothing-spline to the time series data using the &amp;lsquo;timeSeriesFits&amp;rsquo; method.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;featureData(etec16s)$Kingdom &amp;lt;- &amp;quot;Bacteria&amp;quot;
feature_order &amp;lt;- c(&amp;quot;Kingdom&amp;quot;, &amp;quot;Phylum&amp;quot;, &amp;quot;Class&amp;quot;, &amp;quot;Order&amp;quot;, &amp;quot;Family&amp;quot;, &amp;quot;Genus&amp;quot;, &amp;quot;Species&amp;quot;, &amp;quot;OTU.ID&amp;quot;)

timeSeriesFits &amp;lt;- fitMultipleTimeSeries(obj=etec16s,
                             formula = abundance~id + time*class + AntiGiven,
                             class=&amp;quot;AnyDayDiarrhea&amp;quot;,
                             id=&amp;quot;SubjectID&amp;quot;,
                             time=&amp;quot;Day&amp;quot;,
                             lvl=&amp;quot;Species&amp;quot;,
                             feature_order = feature_order,
                             C=0.3,
                             B=1)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;generating-metavizr-object-to-plot&#34;&gt;Generating metavizR object to plot&lt;/h2&gt;

&lt;p&gt;For plotting the data using Metaviz, we use the fit values as y-coordinates and timepoints as x-coordinates.  We need to call &amp;lsquo;ts2MRexperiment&amp;rsquo; with arguments for the sample and feature data, in this case timepoints and annotations, respectively. We also
aggregate to the &amp;lsquo;species&amp;rsquo; level.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;feature_order2 &amp;lt;- c(&amp;quot;Kingdom&amp;quot;, &amp;quot;Phylum&amp;quot;, &amp;quot;Class&amp;quot;, &amp;quot;Order&amp;quot;, &amp;quot;Family&amp;quot;, &amp;quot;Genus&amp;quot;, &amp;quot;Species&amp;quot;)

splinesMRexp &amp;lt;- ts2MRexperiment(timeSeriesFits, feature_data = featureData(aggregateByTaxonomy(etec16s, lvl=&amp;quot;Species&amp;quot;, feature_order = feature_order2)), sampleNames = timeSeriesFits[[2]]$fit$timePoints)
etec16s_species &amp;lt;- aggregateByTaxonomy(etec16s, lvl=&amp;quot;Species&amp;quot;, feature_order = feature_order)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;choosing-features-to-plot-and-adding-a-line-plot-to-metaviz&#34;&gt;Choosing features to plot and adding a line plot to Metaviz&lt;/h2&gt;

&lt;p&gt;We select features with a timepoint with absolute log-fold change greater than 2. We add the MRexperiment as a measurement for Metaviz to plot the hierarchy in a &amp;lsquo;FacetZoom&amp;rsquo; object.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;splines_to_plot &amp;lt;- sapply(1:nrow(MRcounts(splinesMRexp)), function(i) {max(abs(MRcounts(splinesMRexp[i,]))) &amp;gt;= 2})
splines_to_plot_indices &amp;lt;- which(splines_to_plot == TRUE)

ic_plot &amp;lt;- app$plot(splinesMRexp[splines_to_plot_indices,], datasource_name = &amp;quot;etec16_base&amp;quot;, control=metavizControl(norm = FALSE, aggregateAtDepth = 6), feature_order = feature_order2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SplineAddIcicle.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We then use the &amp;lsquo;revisualize&amp;rsquo; method to add a Line Plot for the smoothing spline.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE&#34;&gt;splineObj &amp;lt;- app$data_mgr$add_measurements(splinesMRexp[splines_to_plot_indices,], datasource_name = &amp;quot;etec16_base&amp;quot;, control = metavizControl(norm=FALSE, aggregateAtDepth = 6))
splineMeasurements &amp;lt;- splineObj$get_measurements()
splineChart &amp;lt;- app$chart_mgr$visualize(&amp;quot;LinePlot&amp;quot;, splineMeasurements)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This adds the Line Plot to the workspace but we will need to set the range of the y-axis and modify the color scheme to produce a final workspace.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SplineLinePlotAdded.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;updating-chart-settings-from-metavizr&#34;&gt;Updating chart settings from metavizR&lt;/h2&gt;

&lt;p&gt;We can update the colors and settings on the spline chart. For example, lets limit the y axis to be between -10 and 10. To do so we use the &amp;lsquo;set_chart_settings&amp;rsquo; method. We can list existing settings for a chart using the &amp;lsquo;list_chart_settings&amp;rsquo; function.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r, eval=FALSE, echo=FALSE&#34;&gt;# list available charts
app$chart_mgr$list_chart_types()

# list available settings for &amp;quot;LinePlot&amp;quot;
app$chart_mgr$list_chart_type_settings(&amp;quot;LinePlot&amp;quot;)

# update settings on splineChart 
settings &amp;lt;- list(yMin = -10, yMax = 10)
colors &amp;lt;- c(&amp;quot;#1f77b4&amp;quot;, &amp;quot;#ff7f0e&amp;quot;, &amp;quot;#2ca02c&amp;quot;, &amp;quot;#d62728&amp;quot;, &amp;quot;#9467bd&amp;quot;, &amp;quot;#8c564b&amp;quot;, &amp;quot;#e377c2&amp;quot;, &amp;quot;#7f7f7f&amp;quot;, &amp;quot;#bcbd22&amp;quot;, &amp;quot;#17becf&amp;quot;)
app$chart_mgr$set_chart_settings(splineChart, settings=settings, colors = colors)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SplineLinePlotSettings.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can interact with the Metaviz session, such as hovering over the Line Plot to see highlight the path through the hierarchy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SplineLinePlotHover.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Also, we can hover in the icicle plot to highlight all features under that path in the Line Plot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SplineIcicleHover.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metaviz Docker Containers</title>
      <link>https://epiviz.github.io/tutorials/metaviz/usingDocker/</link>
      <pubDate>Fri, 13 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/usingDocker/</guid>
      <description>

&lt;h2 id=&#34;setup-and-installation&#34;&gt;Setup and Installation&lt;/h2&gt;

&lt;p&gt;Metaviz UI along with the webservices and the graph database are available as docker containers for self-hosting the application. We use docker-compose to manage these containers and the code is available at &lt;a href=&#34;https://github.com/jkanche/metaviz-docker&#34;&gt;Metaviz Docker&lt;/a&gt;. The following provides the list of containers we use and the url to access them&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;App&lt;/th&gt;
&lt;th&gt;Docker Container Name&lt;/th&gt;
&lt;th&gt;Port&lt;/th&gt;
&lt;th&gt;URL to access&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Graph Database&lt;/td&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;td&gt;7474&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://localhost:7474&#34;&gt;http://localhost:7474&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Web Services&lt;/td&gt;
&lt;td&gt;services&lt;/td&gt;
&lt;td&gt;5000&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://localhost:5000&#34;&gt;http://localhost:5000&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Metaviz UI&lt;/td&gt;
&lt;td&gt;ui&lt;/td&gt;
&lt;td&gt;5500&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://localhost:5500&#34;&gt;http://localhost:5500&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;BioConductor&lt;/td&gt;
&lt;td&gt;bioc&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For installing docker and docker-compose, Please follow the instructions at&lt;/p&gt;

&lt;p&gt;Docker:
&lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;https://docs.docker.com/engine/installation/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker Compose:
&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;https://docs.docker.com/compose/install/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We provide an easy to use python script &lt;code&gt;metaviz.py&lt;/code&gt; (available at &lt;a href=&#34;https://github.com/jkanche/metaviz-docker&#34;&gt;Metaviz Docker&lt;/a&gt;) to manage the Metaviz Docker instances. The following commands are available&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Params&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;build&lt;/td&gt;
&lt;td&gt;builds all the metaviz docker containers.&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;serve&lt;/td&gt;
&lt;td&gt;builds and runs the docker containers&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;restart&lt;/td&gt;
&lt;td&gt;restarts metaviz docker containers&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;add&lt;/td&gt;
&lt;td&gt;Load a biom file to the docker instance.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;file_location&amp;gt; &amp;lt;datasource_name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;python metaviz.py -h&lt;/code&gt; displays the available commands and params required to run.&lt;/p&gt;

&lt;h2 id=&#34;adding-data-from-a-biom-file-to-the-metaviz-docker-instance&#34;&gt;Adding Data from a Biom File to the Metaviz Docker Instance&lt;/h2&gt;

&lt;p&gt;MetavizR is an R-package to manage metagenomic data from locally hosted biom files and visualize the data using the Metaviz UI. We provide functions as part of the R-package to import data from Biom Files into a Neo4J Database. The BioConductor docker container helps with this process. It installs the metavizR package and its dependencies and calls the functions to import data into the database.&lt;/p&gt;

&lt;p&gt;The following command loads the metagenomic dataset from a biom file (test_file.biom) and import it to the database as &lt;dataset_name&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python metaviz.py add &amp;lt;test_file.biom&amp;gt; &amp;lt;dataset_name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note: The import process runs in the background and to check if it is done, please use the command &lt;code&gt;docker-compose logs bioc&lt;/code&gt;. The data won&amp;rsquo;t be available until the bioc container is done with the import.&lt;/p&gt;

&lt;h2 id=&#34;accessing-neo4j-docker-instance&#34;&gt;Accessing Neo4j Docker instance&lt;/h2&gt;

&lt;p&gt;Once the data is loaded successfully, neo4j has a built-in UI to explore the graph datasets and can be accessed
at &lt;a href=&#34;http://localhost:7474&#34;&gt;http://localhost:7474&lt;/a&gt; We first show the feature nodes and hiearchy connected by edges.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/FeatureHierarchy.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then we show one path through the feature hierarchy to a leaf node and the count value of one sample as the edge to that leaf node. This denotes the observed counts for that feature in that sample.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/SampleCounts.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;visualizing-metagenomic-data-using-metaviz-ui&#34;&gt;Visualizing Metagenomic Data using metaviz UI&lt;/h3&gt;

&lt;p&gt;To visualize the data loaded through a biom file using metaviz, please follow the instructions at &lt;a href=&#34;tutorialUI&#34;&gt;Metaviz Tutorial using msd16s Dataset&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Highlights of the features available through the Metaviz Application, please visit &lt;a href=&#34;bestFeatures&#34;&gt;Metaviz Features&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hosting Data in Metaviz</title>
      <link>https://epiviz.github.io/tutorials/metaviz/hostingData/</link>
      <pubDate>Mon, 23 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/hostingData/</guid>
      <description>

&lt;p&gt;Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots.
In this post we show how to load into a Metaviz backend database. We
also talk about our plans to host a metagenomics data repository
accessible at metaviz.cbcb.umd.edu.&lt;/p&gt;

&lt;h2 id=&#34;loading-data-using-metavizr&#34;&gt;Loading data using metavizR&lt;/h2&gt;

&lt;p&gt;metavizr is an
R-package that can serve data from an R session to a Metaviz browser
instance and load data into a persistent graph database. In this section
we will load the mouseData available from the metagenomeSeq Bioconductor
package. metavizr operates over a metagenomeSeq MRexperiment object to
build a hierarchy tree data structure over the features and makes count
data available at any level of the tree through aggregation.&lt;/p&gt;

&lt;p&gt;We first load the metavizr and metagenomeSeq packages along with the
data.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(metagenomeSeq)
library(metavizr)
data(mouseData)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we use the mouseData MRexperiment object to create an
EpivizMetagenomicsData object with metavizr.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;feature_order &amp;lt;- c(&amp;quot;superkingdom&amp;quot;,&amp;quot;phylum&amp;quot;,&amp;quot;class&amp;quot;,&amp;quot;order&amp;quot;,&amp;quot;family&amp;quot;,&amp;quot;genus&amp;quot;,&amp;quot;OTU&amp;quot;)
obj &amp;lt;- metavizr:::EpivizMetagenomicsData$new(object = mouseData, feature_order = feature_order)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next we call the &amp;lsquo;toNEO4jDb&amp;rsquo; which will build a hierarchy tree using the
metagenomeSeq object, add all features nodes to a graph database, then
add all sample nodes to the database, add edges denoting hierarchy
levels between all feature nodes, and add edges between leaf feature
nodes and sample nodes to denote observed count values.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;obj$toNEO4JDbHTTP(batch_url = &amp;quot;http://localhost:7474/db/data/batch&amp;quot;, neo4juser = &amp;quot;user&amp;quot;, neo4jpass = &amp;quot;pass&amp;quot;, datasource = &amp;quot;mouseData&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;abundance-matrix-data-format&#34;&gt;Abundance matrix data format&lt;/h2&gt;

&lt;p&gt;For the abundance matrix, which is typically a
biom file, we need each entry of the &amp;ldquo;rows&amp;rdquo; field to have the
&amp;ldquo;metadata&amp;rdquo;&amp;rdquo; field contain a key &amp;ldquo;taxonomy&amp;rdquo; with the value as the
taxonomic lineage for that feature. We also need a non-null value for
the &amp;ldquo;metadata&amp;rdquo; key for each entry of the &amp;ldquo;columns&amp;rdquo; field which denotes
the sample attributes. We provide format validation in the metavizr
package with appropriate error messages for each criteria.&lt;/p&gt;

&lt;h2 id=&#34;cbcb-storage&#34;&gt;CBCB storage&lt;/h2&gt;

&lt;p&gt;We can add datasets to our database and make them accessible through
metaviz.cbcb.umd.edu. We currently store 5 datasets - 3 from published datasets and 2 from
collaborators. The datasets are stored in one Neo4j instance with a
top-level node that is the initial node we query of the disconnected
graph for each dataset. These top-level nodes are what is rendered in
the initial measurement browser pop-up when adding a chart to the
Metaviz workspace.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://epiviz.github.io/tutorials/images/metaviz/MetavizDatasets.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;contact-us&#34;&gt;Contact Us&lt;/h2&gt;

&lt;p&gt;For hosting a dataset, please email us at hcorrada@umiacs.umd.edu.&lt;/p&gt;

&lt;p&gt;For any functionality requests, please post an issue in the appropriate repository at &lt;a href=&#34;https://github.com/epiviz/&#34;&gt;https://github.com/epiviz/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>