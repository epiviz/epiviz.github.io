<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Epiviz Tutorials on Epiviz</title>
    <link>https://epiviz.github.io/tutorials/tutorials/</link>
    <description>Recent content in Epiviz Tutorials on Epiviz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Nov 2016 14:12:05 -0500</lastBuildDate><atom:link href="https://epiviz.github.io/tutorials/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>450k Illumina Human Methylation data for multiple solid tumors</title>
      <link>https://epiviz.github.io/tutorials/tutorials/timp2014/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/timp2014/</guid>
      <description>Table of Contents  Background Tissue data Blocks in multiple tumors Blocks in tumor progression How to use this data in epiviz   This page contains links to epiviz workspaces containing data from the following paper:
 W. Timp, H. Corrada Bravo, O.G. McDonald, M. Goggins, C.Umbricht M. Zieger, A.P. Feinberg, R.A. Irizarry (2014). Genome Medicine, in press.
 The following workspaces contain probe-level methylation values, collapsed methylation difference between cancer and normal, and cancer blocks in each tissue type.</description>
    </item>
    
    <item>
      <title>Chart Tutorial</title>
      <link>https://epiviz.github.io/tutorials/tutorials/charts/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/charts/</guid>
      <description>Table of Contents  Adding a chart to the workspace Manipulating charts More about charts  Creating a new chart plugin      Epiviz has two types of charts: Plots, that display data by feature, and Tracks, that display data by location. For each of the two, it has a separate menu. Whether you want to add a Plot or a Track, open the corresponding menu, and select the chart you want to add.</description>
    </item>
    
    <item>
      <title>Computed Measurements</title>
      <link>https://epiviz.github.io/tutorials/tutorials/computed-measurements/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/computed-measurements/</guid>
      <description>Table of Contents  How to create computed measurements Expression language reference   See it in Epiviz 4
Epiviz exposes a simple expression language that allows users to define new measurements as combinations of existing ones. The expression language is implemented using a JavaScript expression evaluator. This feature can be extremely handy in making simple tweaks in data analysis on the fly, without having to go back and forth to a programming environment.</description>
    </item>
    
    <item>
      <title>Epivizr</title>
      <link>https://epiviz.github.io/tutorials/tutorials/epivizr/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/epivizr/</guid>
      <description>Table of Contents  Installation and requirements Try it out Development version Non-blocking   The epivizr Bioconductor package implements two-way communication between the R/Bioconductor environment and {% link Epiviz http://epiviz.cbbc.umd.edu/4 %}. Objects in the R environment can be displayed as tracks or plots on {% link Epiviz http://epiviz.cbbc.umd.edu/4 %}. Epivizr uses the [Websocket data provider API]({{ site.baseurl }}/websocket.html) for communication between the browser Javascript client and the R environment.</description>
    </item>
    
    <item>
      <title>External Scripts and Plugins</title>
      <link>https://epiviz.github.io/tutorials/tutorials/plugins/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/plugins/</guid>
      <description>Table of Contents  Plugging in external scripts and settings Creating a new Chart Plugin Creating a new Data Provider Plugin   Epiviz allows users to plug in new visualizations and data providers on the fly, by using the Charts API and Data Providers API, without the need of downloading or installing anything on the local machine. The new visualizations and data providers can be used immediately, alongside existing ones.</description>
    </item>
    
    <item>
      <title>Websocket Tutorial</title>
      <link>https://epiviz.github.io/tutorials/tutorials/websocket/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/websocket/</guid>
      <description>The complete Python source code for this example can be found here: https://github.com/epiviz/epivizpy.
 One of the key features of Epiviz is allowing users to plug in new data on the fly, using Data Provider plugins. One powerful such plugin is the WebSocket data provider. This data provider offers an interface between Epiviz and any programming environment that supports WebSocket connections. In R there is already a Bioconductor library that supports communication with Epiviz through WebSockets, called Epivizr.</description>
    </item>
    
    <item>
      <title>Epiviz Tutorials</title>
      <link>https://epiviz.github.io/tutorials/tutorials/</link>
      <pubDate>Tue, 22 Nov 2016 14:12:05 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/</guid>
      <description>Tutorials  Basic  Add charts and plots on epiviz Epivizr   Intermediate  Load and Visualize data using epiviz R package Modify Visualization settings and colors using epiviz R package Create new measurements from existing measurements   Advanced  Create new Plugins for Epiviz - External Scripts, Charts and Data Providers Websocket Tutorial    </description>
    </item>
    
  </channel>
</rss>
