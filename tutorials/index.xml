<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Epiviz</title>
    <link>https://epiviz.github.io/tutorials/</link>
    <description>Recent content on Epiviz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jan 2021 14:08:04 -0500</lastBuildDate><atom:link href="https://epiviz.github.io/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Metaviz Quick Overview</title>
      <link>https://epiviz.github.io/tutorials/metaviz/overview/</link>
      <pubDate>Tue, 24 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/overview/</guid>
      <description>Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. Metaviz supports a flexible plugin framework so users can add new d3 visualizations. This post introduces the most compelling user interface features of Metaviz. An in-depth visual analysis using Metaviz can be found here.</description>
    </item>
    
    <item>
      <title>Differential Analysis with MetagenomeSeq and Metaviz</title>
      <link>https://epiviz.github.io/tutorials/metaviz/metagenomeseq/</link>
      <pubDate>Tue, 17 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/metagenomeseq/</guid>
      <description>Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. The metavizr package implements two-way communication between the R/Bioconductor computational genomics environment and Metaviz. Objects in an R/Bioconductor session can be visualized and explored using the Metaviz navigation tool and plots. In this post we show how to use metavizr and the metagenomeSeq Bioconductor package to perform a statistical and visual analysis of differential abundance of metagenomic data.</description>
    </item>
    
    <item>
      <title>Visual Analysis of MSD16S Dataset</title>
      <link>https://epiviz.github.io/tutorials/metaviz/video_tutorials/</link>
      <pubDate>Fri, 17 Feb 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/video_tutorials/</guid>
      <description>Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. Metaviz supports a flexible plugin framework so users can add new d3 visualizations. This post shows how to use all the UI features of Metaviz to examine the Moderate to Severe childhood diaherrial disease (msd16s) dataset.</description>
    </item>
    
    <item>
      <title>Longitudinal Data Analysis</title>
      <link>https://epiviz.github.io/tutorials/metaviz/spline/</link>
      <pubDate>Fri, 13 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/spline/</guid>
      <description>Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. The metavizr package implements two-way communication between the R/Bioconductor computational genomics environment and Metaviz. Objects in an R/Bioconductor session can be visualized and explored using the Metaviz navigation tool and plots. In this post we show how to use metavizr and the metagenomeSeq Bioconductor package to analyze data from a longitudinal study.</description>
    </item>
    
    <item>
      <title>Metaviz Docker Containers</title>
      <link>https://epiviz.github.io/tutorials/metaviz/usingdocker/</link>
      <pubDate>Fri, 13 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/usingdocker/</guid>
      <description>Setup and Installation Metaviz UI along with the webservices and the graph database are available as docker containers for self-hosting the application. We use docker-compose to manage these containers and the code is available at Metaviz Docker. The following provides the list of containers we use and the url to access them
   App Docker Container Name Port URL to access     Graph Database db 7474 http://localhost:7474   Web Services services 5000 http://localhost:5000   Metaviz UI ui 5500 http://localhost:5500   BioConductor bioc - -    For installing docker and docker-compose, Please follow the instructions at</description>
    </item>
    
    <item>
      <title>Hosting Data in Metaviz</title>
      <link>https://epiviz.github.io/tutorials/metaviz/hostingdata/</link>
      <pubDate>Mon, 23 Jan 2017 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/hostingdata/</guid>
      <description>Metaviz is a tool for interactive visualization and exploration of metagenomic sequencing data. It provides a novel navigation tool for exploring hierarchical feature data that is coupled with multiple data visualizations including heatmaps, stacked bar charts, and scatter plots. In this post we show how to load into a Metaviz backend database. We also talk about our plans to host a metagenomics data repository accessible at metaviz.cbcb.umd.edu.
Loading data using metavizR metavizr is an R-package that can serve data from an R session to a Metaviz browser instance and load data into a persistent graph database.</description>
    </item>
    
    <item>
      <title>450k Illumina Human Methylation data for multiple solid tumors</title>
      <link>https://epiviz.github.io/tutorials/tutorials/timp2014/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/timp2014/</guid>
      <description>Table of Contents  Background Tissue data Blocks in multiple tumors Blocks in tumor progression How to use this data in epiviz   This page contains links to epiviz workspaces containing data from the following paper:
 W. Timp, H. Corrada Bravo, O.G. McDonald, M. Goggins, C.Umbricht M. Zieger, A.P. Feinberg, R.A. Irizarry (2014). Genome Medicine, in press.
 The following workspaces contain probe-level methylation values, collapsed methylation difference between cancer and normal, and cancer blocks in each tissue type.</description>
    </item>
    
    <item>
      <title>Chart Tutorial</title>
      <link>https://epiviz.github.io/tutorials/tutorials/charts/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/charts/</guid>
      <description>Table of Contents  Adding a chart to the workspace Manipulating charts More about charts  Creating a new chart plugin      Epiviz has two types of charts: Plots, that display data by feature, and Tracks, that display data by location. For each of the two, it has a separate menu. Whether you want to add a Plot or a Track, open the corresponding menu, and select the chart you want to add.</description>
    </item>
    
    <item>
      <title>Computed Measurements</title>
      <link>https://epiviz.github.io/tutorials/tutorials/computed-measurements/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/computed-measurements/</guid>
      <description>Table of Contents  How to create computed measurements Expression language reference   See it in Epiviz 4
Epiviz exposes a simple expression language that allows users to define new measurements as combinations of existing ones. The expression language is implemented using a JavaScript expression evaluator. This feature can be extremely handy in making simple tweaks in data analysis on the fly, without having to go back and forth to a programming environment.</description>
    </item>
    
    <item>
      <title>Epivizr</title>
      <link>https://epiviz.github.io/tutorials/tutorials/epivizr/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/epivizr/</guid>
      <description>Table of Contents  Installation and requirements Try it out Development version Non-blocking   The epivizr Bioconductor package implements two-way communication between the R/Bioconductor environment and {% link Epiviz http://epiviz.cbbc.umd.edu/4 %}. Objects in the R environment can be displayed as tracks or plots on {% link Epiviz http://epiviz.cbbc.umd.edu/4 %}. Epivizr uses the [Websocket data provider API]({{ site.baseurl }}/websocket.html) for communication between the browser Javascript client and the R environment.</description>
    </item>
    
    <item>
      <title>External Scripts and Plugins</title>
      <link>https://epiviz.github.io/tutorials/tutorials/plugins/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/plugins/</guid>
      <description>Table of Contents  Plugging in external scripts and settings Creating a new Chart Plugin Creating a new Data Provider Plugin   Epiviz allows users to plug in new visualizations and data providers on the fly, by using the Charts API and Data Providers API, without the need of downloading or installing anything on the local machine. The new visualizations and data providers can be used immediately, alongside existing ones.</description>
    </item>
    
    <item>
      <title>Websocket Tutorial</title>
      <link>https://epiviz.github.io/tutorials/tutorials/websocket/</link>
      <pubDate>Wed, 23 Nov 2016 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/websocket/</guid>
      <description>The complete Python source code for this example can be found here: https://github.com/epiviz/epivizpy.
 One of the key features of Epiviz is allowing users to plug in new data on the fly, using Data Provider plugins. One powerful such plugin is the WebSocket data provider. This data provider offers an interface between Epiviz and any programming environment that supports WebSocket connections. In R there is already a Bioconductor library that supports communication with Epiviz through WebSockets, called Epivizr.</description>
    </item>
    
    <item>
      <title>Create a Diversity Plot with HMP2Data IBD Biopsy</title>
      <link>https://epiviz.github.io/tutorials/metaviz/diveristy_plot/</link>
      <pubDate>Wed, 20 Jan 2021 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/diveristy_plot/</guid>
      <description>First on the Metaviz landing page click &amp;ldquo;Start App&amp;rdquo;
Next scroll to the bottom and select &amp;ldquo;ibd_biopsy_hmp2data&amp;rdquo; Choose &amp;ldquo;Add Visualization&amp;rdquo; and click &amp;ldquo;Heatmap&amp;rdquo;&amp;quot;
On the Heatmap click the Settings icon (middle) and in the Settings menu change &amp;ldquo;Plot Label&amp;rdquo; dropdown menu from &amp;ldquo;name&amp;rdquo; to &amp;ldquo;diagnosis&amp;rdquo; and toggle the button for &amp;ldquo;Row labels as color&amp;rdquo; to &amp;ldquo;On&amp;rdquo;
Select samples to visualize and click &amp;ldquo;Ok&amp;rdquo;
Choose &amp;ldquo;Add visualization&amp;rdquo; click &amp;ldquo;Diversity Box Plot&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Save plots on Metaviz</title>
      <link>https://epiviz.github.io/tutorials/metaviz/save_plots/</link>
      <pubDate>Wed, 20 Jan 2021 14:08:04 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/metaviz/save_plots/</guid>
      <description>Each visualization on Metaviz has an option available to save and export it as png or svg. Choose the save option when you hover over a visualization in the top right corner.
Now choose a format to save the visualization. We recomment using png or svg as the export format.
finally, this downloads the visualization in the choosen format. For example the diversity box plot would generate a file below -</description>
    </item>
    
    <item>
      <title>Epiviz Tutorials</title>
      <link>https://epiviz.github.io/tutorials/tutorials/</link>
      <pubDate>Tue, 22 Nov 2016 14:12:05 -0500</pubDate>
      
      <guid>https://epiviz.github.io/tutorials/tutorials/</guid>
      <description>Tutorials  Basic  Add charts and plots on epiviz Epivizr   Intermediate  Load and Visualize data using epiviz R package Modify Visualization settings and colors using epiviz R package Create new measurements from existing measurements   Advanced  Create new Plugins for Epiviz - External Scripts, Charts and Data Providers Websocket Tutorial    </description>
    </item>
    
  </channel>
</rss>
